gchar *s = N_("Secure Watermark Function of Device");
gchar *s = N_("Use Secure Watermark Function of Device");
gchar *s = N_("Secure Watermark Function of Device");
gchar *s = N_("Use Secure Watermark Function of Device");
gchar *s = N_("Secure Watermark Function of Device");
gchar *s = N_("Use Secure Watermark Function of Device");
gchar *s = N_("Secure Watermark Function of Device");
gchar *s = N_("Use Secure Watermark Function of Device");
gchar *s = N_("Secure Watermark Function of Device");
gchar *s = N_("Use Secure Watermark Function of Device");
gchar *s = N_("Secure Watermark Function of Device");
gchar *s = N_("Drawer 1 ");
gchar *s = N_("Drawer 2 ");
gchar *s = N_("Drawer 1 ");
gchar *s = N_("Drawer 2 ");
gchar *s = N_("Insertion Unit ");
gchar *s = N_("Drawer 1 ");
gchar *s = N_("Drawer 2 ");
gchar *s = N_("Use Secure Watermark Function of Device");
gchar *s = N_("Secure Watermark Function of Device");
gchar *s = N_("Letterhead");
gchar *s = N_("Drawer 1 ");
gchar *s = N_("Drawer 2 ");
gchar *s = N_("Letterhead");
gchar *s = N_("Drawer 1 ");
gchar *s = N_("Drawer 2 ");
gchar *s = N_("Insertion Unit ");
gchar *s = N_("Drawer 1 ");
gchar *s = N_("Drawer 2 ");
gchar *s = N_("Use Secure Watermark Function of Device");
gchar *s = N_("Secure Watermark Function of Device");
gchar *s = N_("Drawer 1 ");
gchar *s = N_("Drawer 2 ");
gchar *s = N_("Drawer 1 ");
gchar *s = N_("Drawer 2 ");
gchar *s = N_("Insertion Unit ");
gchar *s = N_("Drawer 1 ");
gchar *s = N_("Drawer 2 ");
gchar *s = N_("Use Secure Watermark Function of Device");
gchar *s = N_("Secure Watermark Function of Device");
gchar *s = N_("Letterhead");
gchar *s = N_("Drawer 1 ");
gchar *s = N_("Drawer 2 ");
gchar *s = N_("Letterhead");
gchar *s = N_("Drawer 1 ");
gchar *s = N_("Drawer 2 ");
gchar *s = N_("Insertion Unit ");
gchar *s = N_("Drawer 1 ");
gchar *s = N_("Drawer 2 ");
gchar *s = N_("Use Secure Watermark Function of Device");
gchar *s = N_("Secure Watermark Function of Device");
gchar *s = N_("Drawer 1 ");
gchar *s = N_("Drawer 2 ");
gchar *s = N_("Use Secure Watermark Function of Device");
gchar *s = N_("Secure Watermark Function of Device");
gchar *s = N_("Drawer 1 ");
gchar *s = N_("Drawer 2 ");
gchar *s = N_("Drawer 1 ");
gchar *s = N_("Drawer 2 ");
gchar *s = N_("Drawer 1 ");
gchar *s = N_("Drawer 2 ");
gchar *s = N_("Use Secure Watermark Function of Device");
gchar *s = N_("Secure Watermark Function of Device");
gchar *s = N_("Drawer 1 ");
gchar *s = N_("Drawer 2 ");
gchar *s = N_("Drawer 1 ");
gchar *s = N_("Drawer 2 ");
gchar *s = N_("Drawer 1 ");
gchar *s = N_("Drawer 2 ");
gchar *s = N_("Use Secure Watermark Function of Device");
gchar *s = N_("3-Hole Punch");
gchar *s = N_("3-Hole Punch");
gchar *s = N_("Toner Save:");
gchar *s = N_("Toner Save:");
gchar *s = N_("Secure Watermark Function of Device");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Tracing");
gchar *s = N_("Thin");
gchar *s = N_("1-sided Coated 1");
gchar *s = N_("1-sided Coated 2");
gchar *s = N_("2-sided Coated 1");
gchar *s = N_("2-sided Coated 2");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Thin");
gchar *s = N_("Use Secure Watermark Function of Device");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("Secure Watermark Function of Device");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Tracing");
gchar *s = N_("Thin");
gchar *s = N_("1-sided Coated 1");
gchar *s = N_("1-sided Coated 2");
gchar *s = N_("2-sided Coated 1");
gchar *s = N_("2-sided Coated 2");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Thin");
gchar *s = N_("Use Secure Watermark Function of Device");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("Secure Watermark Function of Device");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Tracing");
gchar *s = N_("Thin");
gchar *s = N_("1-sided Coated 1");
gchar *s = N_("1-sided Coated 2");
gchar *s = N_("2-sided Coated 1");
gchar *s = N_("2-sided Coated 2");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Thin");
gchar *s = N_("Use Secure Watermark Function of Device");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("Secure Watermark Function of Device");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Tracing");
gchar *s = N_("Thin");
gchar *s = N_("1-sided Coated 1");
gchar *s = N_("1-sided Coated 2");
gchar *s = N_("2-sided Coated 1");
gchar *s = N_("2-sided Coated 2");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Thin");
gchar *s = N_("Use Secure Watermark Function of Device");
gchar *s = N_("Secure Watermark Function of Device");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Tracing");
gchar *s = N_("Thin");
gchar *s = N_("1-sided Coated 1");
gchar *s = N_("1-sided Coated 2");
gchar *s = N_("2-sided Coated 1");
gchar *s = N_("2-sided Coated 2");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Thin");
gchar *s = N_("Use Secure Watermark Function of Device");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("Toner Save:");
gchar *s = N_("Envelope NAGAGATA 3/YOUGATANAGA 3");
gchar *s = N_("Secure Watermark Function of Device");
gchar *s = N_("Plain Paper [Thin]");
gchar *s = N_("Plain Paper [Standard]");
gchar *s = N_("Plain Paper [Heavy]");
gchar *s = N_("Plain Paper [Thin]");
gchar *s = N_("Plain Paper [Standard]");
gchar *s = N_("Plain Paper [Heavy]");
gchar *s = N_("Use Secure Watermark Function of Device");
gchar *s = N_("Secure Watermark Function of Device");
gchar *s = N_("Plain Paper [Thin]");
gchar *s = N_("Plain Paper [Standard]");
gchar *s = N_("Plain Paper [Heavy]");
gchar *s = N_("Plain Paper [Thin]");
gchar *s = N_("Plain Paper [Standard]");
gchar *s = N_("Plain Paper [Heavy]");
gchar *s = N_("Use Secure Watermark Function of Device");
gchar *s = N_("3-Hole Punch");
gchar *s = N_("Secure Watermark Function of Device");
gchar *s = N_("Plain Paper [Thin]");
gchar *s = N_("Plain Paper [Standard]");
gchar *s = N_("Plain Paper [Heavy]");
gchar *s = N_("Plain Paper [Thin]");
gchar *s = N_("Plain Paper [Standard]");
gchar *s = N_("Plain Paper [Heavy]");
gchar *s = N_("Use Secure Watermark Function of Device");
gchar *s = N_("Secure Watermark Function of Device");
gchar *s = N_("Plain Paper [Thin]");
gchar *s = N_("Plain Paper [Standard]");
gchar *s = N_("Plain Paper [Heavy]");
gchar *s = N_("Plain Paper [Thin]");
gchar *s = N_("Plain Paper [Standard]");
gchar *s = N_("Plain Paper [Heavy]");
gchar *s = N_("Use Secure Watermark Function of Device");
gchar *s = N_("Secure Watermark Function of Device");
gchar *s = N_("Plain Paper [Thin]");
gchar *s = N_("Plain Paper [Standard]");
gchar *s = N_("Plain Paper [Heavy]");
gchar *s = N_("Plain Paper [Thin]");
gchar *s = N_("Plain Paper [Standard]");
gchar *s = N_("Plain Paper [Heavy]");
gchar *s = N_("Use Secure Watermark Function of Device");
gchar *s = N_("Secure Watermark Function of Device");
gchar *s = N_("Plain Paper [Thin]");
gchar *s = N_("Plain Paper [Standard]");
gchar *s = N_("Plain Paper [Heavy]");
gchar *s = N_("Plain Paper [Thin]");
gchar *s = N_("Plain Paper [Standard]");
gchar *s = N_("Plain Paper [Heavy]");
gchar *s = N_("Use Secure Watermark Function of Device");
gchar *s = N_("Secure Watermark Function of Device");
gchar *s = N_("Use Secure Watermark Function of Device");
gchar *s = N_("Secure Watermark Function of Device");
gchar *s = N_("Use Secure Watermark Function of Device");
gchar *s = N_("Secure Watermark Function of Device");
gchar *s = N_("Use Secure Watermark Function of Device");
gchar *s = N_("Secure Printing Function of Device");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Tracing");
gchar *s = N_("Thin");
gchar *s = N_("1-sided Coated 1");
gchar *s = N_("1-sided Coated 2");
gchar *s = N_("2-sided Coated 1");
gchar *s = N_("2-sided Coated 2");
gchar *s = N_("Drawer 5 ");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Thin");
gchar *s = N_("Use Secure Printing Function of Device");
gchar *s = N_("Secure Printing Function of Device");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Tracing");
gchar *s = N_("Thin");
gchar *s = N_("1-sided Coated 1");
gchar *s = N_("1-sided Coated 2");
gchar *s = N_("2-sided Coated 1");
gchar *s = N_("2-sided Coated 2");
gchar *s = N_("Drawer 5 ");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Thin");
gchar *s = N_("Use Secure Printing Function of Device");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("Secure Printing Function of Device");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Tracing");
gchar *s = N_("Thin");
gchar *s = N_("1-sided Coated 1");
gchar *s = N_("1-sided Coated 2");
gchar *s = N_("2-sided Coated 1");
gchar *s = N_("2-sided Coated 2");
gchar *s = N_("Drawer 5 ");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Thin");
gchar *s = N_("Use Secure Printing Function of Device");
gchar *s = N_("Secure Printing Function of Device");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Tracing");
gchar *s = N_("Thin");
gchar *s = N_("1-sided Coated 1");
gchar *s = N_("1-sided Coated 2");
gchar *s = N_("2-sided Coated 1");
gchar *s = N_("2-sided Coated 2");
gchar *s = N_("Drawer 5 ");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Thin");
gchar *s = N_("Use Secure Printing Function of Device");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("Secure Watermark Function of Device");
gchar *s = N_("Drawer 1 ");
gchar *s = N_("Drawer 2 ");
gchar *s = N_("Use Secure Watermark Function of Device");
gchar *s = N_("Secure Watermark Function of Device");
gchar *s = N_("Drawer 1 ");
gchar *s = N_("Drawer 2 ");
gchar *s = N_("Use Secure Watermark Function of Device");
gchar *s = N_("Secure Watermark Function of Device");
gchar *s = N_("Use Secure Watermark Function of Device");
gchar *s = N_("Secure Watermark Function of Device");
gchar *s = N_("Use Secure Watermark Function of Device");
gchar *s = N_("Drawer 1 ");
gchar *s = N_("Drawer 2 ");
gchar *s = N_("Drawer 1 ");
gchar *s = N_("Drawer 2 ");
gchar *s = N_("Drawer 1 ");
gchar *s = N_("Drawer 2 ");
gchar *s = N_("Drawer 1 ");
gchar *s = N_("Drawer 2 ");
gchar *s = N_("Secure Watermark Function of Device");
gchar *s = N_("Drawer 1 ");
gchar *s = N_("Drawer 2 ");
gchar *s = N_("Use Secure Watermark Function of Device");
gchar *s = N_("Secure Watermark Function of Device");
gchar *s = N_("Drawer 1 ");
gchar *s = N_("Drawer 2 ");
gchar *s = N_("Use Secure Watermark Function of Device");
gchar *s = N_("Secure Printing Function of Device");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Recycled Paper 1");
gchar *s = N_("Recycled Paper 2");
gchar *s = N_("Heavy Paper 4");
gchar *s = N_("Tracing");
gchar *s = N_("Thin");
gchar *s = N_("1-sided Coated 1");
gchar *s = N_("1-sided Coated 2");
gchar *s = N_("1-sided Coated 3");
gchar *s = N_("1-sided Coated 4");
gchar *s = N_("2-sided Coated 1");
gchar *s = N_("2-sided Coated 2");
gchar *s = N_("2-sided Coated 3");
gchar *s = N_("2-sided Coated 4");
gchar *s = N_("Texture Paper 1");
gchar *s = N_("Texture Paper 2");
gchar *s = N_("Texture Paper 3");
gchar *s = N_("Texture Paper 4");
gchar *s = N_("Drawer 5 ");
gchar *s = N_("Drawer 5  ");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Recycled Paper 1");
gchar *s = N_("Recycled Paper 2");
gchar *s = N_("Heavy Paper 4");
gchar *s = N_("Thin");
gchar *s = N_("1-sided Coated 1");
gchar *s = N_("1-sided Coated 2");
gchar *s = N_("1-sided Coated 3");
gchar *s = N_("1-sided Coated 4");
gchar *s = N_("2-sided Coated 1");
gchar *s = N_("2-sided Coated 2");
gchar *s = N_("2-sided Coated 3");
gchar *s = N_("2-sided Coated 4");
gchar *s = N_("Texture Paper 1");
gchar *s = N_("Texture Paper 2");
gchar *s = N_("Texture Paper 3");
gchar *s = N_("Texture Paper 4");
gchar *s = N_("Drawer 5 ");
gchar *s = N_("Drawer 5  ");
gchar *s = N_("Drawer 5 ");
gchar *s = N_("Drawer 5  ");
gchar *s = N_("Use Secure Printing Function of Device");
gchar *s = N_("Secure Printing Function of Device");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Recycled Paper 1");
gchar *s = N_("Recycled Paper 2");
gchar *s = N_("Heavy Paper 4");
gchar *s = N_("Tracing");
gchar *s = N_("Thin");
gchar *s = N_("1-sided Coated 1");
gchar *s = N_("1-sided Coated 2");
gchar *s = N_("1-sided Coated 3");
gchar *s = N_("1-sided Coated 4");
gchar *s = N_("2-sided Coated 1");
gchar *s = N_("2-sided Coated 2");
gchar *s = N_("2-sided Coated 3");
gchar *s = N_("2-sided Coated 4");
gchar *s = N_("Texture Paper 1");
gchar *s = N_("Texture Paper 2");
gchar *s = N_("Texture Paper 3");
gchar *s = N_("Texture Paper 4");
gchar *s = N_("Drawer 5 ");
gchar *s = N_("Drawer 5  ");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Recycled Paper 1");
gchar *s = N_("Recycled Paper 2");
gchar *s = N_("Heavy Paper 4");
gchar *s = N_("Thin");
gchar *s = N_("1-sided Coated 1");
gchar *s = N_("1-sided Coated 2");
gchar *s = N_("1-sided Coated 3");
gchar *s = N_("1-sided Coated 4");
gchar *s = N_("2-sided Coated 1");
gchar *s = N_("2-sided Coated 2");
gchar *s = N_("2-sided Coated 3");
gchar *s = N_("2-sided Coated 4");
gchar *s = N_("Texture Paper 1");
gchar *s = N_("Texture Paper 2");
gchar *s = N_("Texture Paper 3");
gchar *s = N_("Texture Paper 4");
gchar *s = N_("Drawer 5 ");
gchar *s = N_("Drawer 5  ");
gchar *s = N_("Drawer 5 ");
gchar *s = N_("Drawer 5  ");
gchar *s = N_("Use Secure Printing Function of Device");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("Secure Printing Function of Device");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Recycled Paper 1");
gchar *s = N_("Recycled Paper 2");
gchar *s = N_("Heavy Paper 4");
gchar *s = N_("Tracing");
gchar *s = N_("Thin");
gchar *s = N_("1-sided Coated 1");
gchar *s = N_("1-sided Coated 2");
gchar *s = N_("1-sided Coated 3");
gchar *s = N_("1-sided Coated 4");
gchar *s = N_("2-sided Coated 1");
gchar *s = N_("2-sided Coated 2");
gchar *s = N_("2-sided Coated 3");
gchar *s = N_("2-sided Coated 4");
gchar *s = N_("Texture Paper 1");
gchar *s = N_("Texture Paper 2");
gchar *s = N_("Texture Paper 3");
gchar *s = N_("Texture Paper 4");
gchar *s = N_("Drawer 5 ");
gchar *s = N_("Drawer 5  ");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Recycled Paper 1");
gchar *s = N_("Recycled Paper 2");
gchar *s = N_("Heavy Paper 4");
gchar *s = N_("Thin");
gchar *s = N_("1-sided Coated 1");
gchar *s = N_("1-sided Coated 2");
gchar *s = N_("1-sided Coated 3");
gchar *s = N_("1-sided Coated 4");
gchar *s = N_("2-sided Coated 1");
gchar *s = N_("2-sided Coated 2");
gchar *s = N_("2-sided Coated 3");
gchar *s = N_("2-sided Coated 4");
gchar *s = N_("Texture Paper 1");
gchar *s = N_("Texture Paper 2");
gchar *s = N_("Texture Paper 3");
gchar *s = N_("Texture Paper 4");
gchar *s = N_("Drawer 5");
gchar *s = N_("Drawer 5 ");
gchar *s = N_("Drawer 5  ");
gchar *s = N_("Drawer 6");
gchar *s = N_("Drawer 7");
gchar *s = N_("Drawer 5");
gchar *s = N_("Drawer 5 ");
gchar *s = N_("Drawer 5  ");
gchar *s = N_("Drawer 6");
gchar *s = N_("Drawer 7");
gchar *s = N_("Use Secure Printing Function of Device");
gchar *s = N_("Secure Printing Function of Device");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Recycled Paper 1");
gchar *s = N_("Recycled Paper 2");
gchar *s = N_("Heavy Paper 4");
gchar *s = N_("Tracing");
gchar *s = N_("Thin");
gchar *s = N_("1-sided Coated 1");
gchar *s = N_("1-sided Coated 2");
gchar *s = N_("1-sided Coated 3");
gchar *s = N_("1-sided Coated 4");
gchar *s = N_("2-sided Coated 1");
gchar *s = N_("2-sided Coated 2");
gchar *s = N_("2-sided Coated 3");
gchar *s = N_("2-sided Coated 4");
gchar *s = N_("Texture Paper 1");
gchar *s = N_("Texture Paper 2");
gchar *s = N_("Texture Paper 3");
gchar *s = N_("Texture Paper 4");
gchar *s = N_("Drawer 5 ");
gchar *s = N_("Drawer 5  ");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Recycled Paper 1");
gchar *s = N_("Recycled Paper 2");
gchar *s = N_("Heavy Paper 4");
gchar *s = N_("Thin");
gchar *s = N_("1-sided Coated 1");
gchar *s = N_("1-sided Coated 2");
gchar *s = N_("1-sided Coated 3");
gchar *s = N_("1-sided Coated 4");
gchar *s = N_("2-sided Coated 1");
gchar *s = N_("2-sided Coated 2");
gchar *s = N_("2-sided Coated 3");
gchar *s = N_("2-sided Coated 4");
gchar *s = N_("Texture Paper 1");
gchar *s = N_("Texture Paper 2");
gchar *s = N_("Texture Paper 3");
gchar *s = N_("Texture Paper 4");
gchar *s = N_("Drawer 5");
gchar *s = N_("Drawer 5 ");
gchar *s = N_("Drawer 5  ");
gchar *s = N_("Drawer 6");
gchar *s = N_("Drawer 7");
gchar *s = N_("Drawer 5");
gchar *s = N_("Drawer 5 ");
gchar *s = N_("Drawer 5  ");
gchar *s = N_("Drawer 6");
gchar *s = N_("Drawer 7");
gchar *s = N_("Use Secure Printing Function of Device");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("Secure Printing Function of Device");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Recycled Paper 1");
gchar *s = N_("Recycled Paper 2");
gchar *s = N_("Heavy Paper 4");
gchar *s = N_("Tracing");
gchar *s = N_("Thin");
gchar *s = N_("1-sided Coated 1");
gchar *s = N_("1-sided Coated 2");
gchar *s = N_("1-sided Coated 3");
gchar *s = N_("1-sided Coated 4");
gchar *s = N_("2-sided Coated 1");
gchar *s = N_("2-sided Coated 2");
gchar *s = N_("2-sided Coated 3");
gchar *s = N_("2-sided Coated 4");
gchar *s = N_("Texture Paper 1");
gchar *s = N_("Texture Paper 2");
gchar *s = N_("Texture Paper 3");
gchar *s = N_("Texture Paper 4");
gchar *s = N_("Drawer 5 ");
gchar *s = N_("Drawer 5  ");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Recycled Paper 1");
gchar *s = N_("Recycled Paper 2");
gchar *s = N_("Heavy Paper 4");
gchar *s = N_("Thin");
gchar *s = N_("1-sided Coated 1");
gchar *s = N_("1-sided Coated 2");
gchar *s = N_("1-sided Coated 3");
gchar *s = N_("1-sided Coated 4");
gchar *s = N_("2-sided Coated 1");
gchar *s = N_("2-sided Coated 2");
gchar *s = N_("2-sided Coated 3");
gchar *s = N_("2-sided Coated 4");
gchar *s = N_("Texture Paper 1");
gchar *s = N_("Texture Paper 2");
gchar *s = N_("Texture Paper 3");
gchar *s = N_("Texture Paper 4");
gchar *s = N_("Drawer 5");
gchar *s = N_("Drawer 5 ");
gchar *s = N_("Drawer 5  ");
gchar *s = N_("Drawer 6");
gchar *s = N_("Drawer 7");
gchar *s = N_("Drawer 5");
gchar *s = N_("Drawer 5 ");
gchar *s = N_("Drawer 5  ");
gchar *s = N_("Drawer 6");
gchar *s = N_("Drawer 7");
gchar *s = N_("Use Secure Printing Function of Device");
gchar *s = N_("Secure Printing Function of Device");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Recycled Paper 1");
gchar *s = N_("Recycled Paper 2");
gchar *s = N_("Heavy Paper 4");
gchar *s = N_("Tracing");
gchar *s = N_("Thin");
gchar *s = N_("1-sided Coated 1");
gchar *s = N_("1-sided Coated 2");
gchar *s = N_("1-sided Coated 3");
gchar *s = N_("1-sided Coated 4");
gchar *s = N_("2-sided Coated 1");
gchar *s = N_("2-sided Coated 2");
gchar *s = N_("2-sided Coated 3");
gchar *s = N_("2-sided Coated 4");
gchar *s = N_("Texture Paper 1");
gchar *s = N_("Texture Paper 2");
gchar *s = N_("Texture Paper 3");
gchar *s = N_("Texture Paper 4");
gchar *s = N_("Drawer 5 ");
gchar *s = N_("Drawer 5  ");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Recycled Paper 1");
gchar *s = N_("Recycled Paper 2");
gchar *s = N_("Heavy Paper 4");
gchar *s = N_("Thin");
gchar *s = N_("1-sided Coated 1");
gchar *s = N_("1-sided Coated 2");
gchar *s = N_("1-sided Coated 3");
gchar *s = N_("1-sided Coated 4");
gchar *s = N_("2-sided Coated 1");
gchar *s = N_("2-sided Coated 2");
gchar *s = N_("2-sided Coated 3");
gchar *s = N_("2-sided Coated 4");
gchar *s = N_("Texture Paper 1");
gchar *s = N_("Texture Paper 2");
gchar *s = N_("Texture Paper 3");
gchar *s = N_("Texture Paper 4");
gchar *s = N_("Drawer 5");
gchar *s = N_("Drawer 5 ");
gchar *s = N_("Drawer 5  ");
gchar *s = N_("Drawer 6");
gchar *s = N_("Drawer 7");
gchar *s = N_("Drawer 5");
gchar *s = N_("Drawer 5 ");
gchar *s = N_("Drawer 5  ");
gchar *s = N_("Drawer 6");
gchar *s = N_("Drawer 7");
gchar *s = N_("Use Secure Printing Function of Device");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("Special Print Adjustment:");
gchar *s = N_("Envelope Catalog Glove No.8");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("Special Print Adjustment:");
gchar *s = N_("Envelope Catalog Glove No.8");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("Special Print Adjustment:");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("Heavy Paper H");
gchar *s = N_("Special Print Adjustment:");
gchar *s = N_("Heavy Paper H");
gchar *s = N_("Special Print Adjustment:");
gchar *s = N_("Heavy Paper H");
gchar *s = N_("Special Print Adjustment:");
gchar *s = N_("Heavy Paper H");
gchar *s = N_("Special Print Adjustment:");
gchar *s = N_("Heavy Paper H");
gchar *s = N_("Special Print Adjustment:");
gchar *s = N_("Toner Save:");
gchar *s = N_("Special Print Adjustment:");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("Toner Save:");
gchar *s = N_("Special Print Adjustment:");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("3-Hole Punch");
gchar *s = N_("3-Hole Punch");
gchar *s = N_("Special Print Adjustment:");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("3-Hole Punch");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("3-Hole Punch");
gchar *s = N_("3-Hole Punch");
gchar *s = N_("3-Hole Punch");
gchar *s = N_("3-Hole Punch");
gchar *s = N_("3-Hole Punch");
gchar *s = N_("3-Hole Punch");
gchar *s = N_("3-Hole Punch");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("3-Hole Punch");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("3-Hole Punch");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("3-Hole Punch");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("Secure Printing Function of Device");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Heavy Paper 4");
gchar *s = N_("Tracing");
gchar *s = N_("Thin");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Thin");
gchar *s = N_("Use Secure Printing Function of Device");
gchar *s = N_("Secure Printing Function of Device");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Heavy Paper 4");
gchar *s = N_("Tracing");
gchar *s = N_("Thin");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Thin");
gchar *s = N_("Use Secure Printing Function of Device");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("Secure Printing Function of Device");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Heavy Paper 4");
gchar *s = N_("Tracing");
gchar *s = N_("Thin");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Thin");
gchar *s = N_("Use Secure Printing Function of Device");
gchar *s = N_("Secure Printing Function of Device");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Heavy Paper 4");
gchar *s = N_("Tracing");
gchar *s = N_("Thin");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Thin");
gchar *s = N_("Use Secure Printing Function of Device");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("Secure Printing Function of Device");
gchar *s = N_("Tracing");
gchar *s = N_("Thin");
gchar *s = N_("Drawer 5 ");
gchar *s = N_("Thin");
gchar *s = N_("Drawer 5 ");
gchar *s = N_("Drawer 5 ");
gchar *s = N_("Use Secure Printing Function of Device");
gchar *s = N_("Secure Printing Function of Device");
gchar *s = N_("Tracing");
gchar *s = N_("Thin");
gchar *s = N_("Drawer 5 ");
gchar *s = N_("Thin");
gchar *s = N_("Drawer 5 ");
gchar *s = N_("Drawer 5 ");
gchar *s = N_("Use Secure Printing Function of Device");
gchar *s = N_("Secure Printing Function of Device");
gchar *s = N_("Tracing");
gchar *s = N_("Thin");
gchar *s = N_("Drawer 5 ");
gchar *s = N_("Thin");
gchar *s = N_("Drawer 5 ");
gchar *s = N_("Drawer 5 ");
gchar *s = N_("Use Secure Printing Function of Device");
gchar *s = N_("Secure Printing Function of Device");
gchar *s = N_("Tracing");
gchar *s = N_("Thin");
gchar *s = N_("Drawer 5 ");
gchar *s = N_("Thin");
gchar *s = N_("Drawer 5 ");
gchar *s = N_("Drawer 5 ");
gchar *s = N_("Use Secure Printing Function of Device");
gchar *s = N_("Drawer 1 ");
gchar *s = N_("Drawer 2 ");
gchar *s = N_("Drawer 1 ");
gchar *s = N_("Drawer 2 ");
gchar *s = N_("Secure Printing Function of Device");
gchar *s = N_("Tracing");
gchar *s = N_("Thin");
gchar *s = N_("Drawer 5 ");
gchar *s = N_("Thin");
gchar *s = N_("Drawer 5 ");
gchar *s = N_("Drawer 5 ");
gchar *s = N_("Use Secure Printing Function of Device");
gchar *s = N_("Secure Printing Function of Device");
gchar *s = N_("Tracing");
gchar *s = N_("Thin");
gchar *s = N_("Drawer 5 ");
gchar *s = N_("Thin");
gchar *s = N_("Drawer 5 ");
gchar *s = N_("Drawer 5 ");
gchar *s = N_("Use Secure Printing Function of Device");
gchar *s = N_("Secure Printing Function of Device");
gchar *s = N_("Tracing");
gchar *s = N_("Thin");
gchar *s = N_("Drawer 5 ");
gchar *s = N_("Thin");
gchar *s = N_("Drawer 5 ");
gchar *s = N_("Drawer 5 ");
gchar *s = N_("Use Secure Printing Function of Device");
gchar *s = N_("Secure Printing Function of Device");
gchar *s = N_("Tracing");
gchar *s = N_("Thin");
gchar *s = N_("Drawer 5 ");
gchar *s = N_("Thin");
gchar *s = N_("Drawer 5 ");
gchar *s = N_("Drawer 5 ");
gchar *s = N_("Use Secure Printing Function of Device");
gchar *s = N_("Special Print Mode:");
gchar *s = N_("Special Print Mode:");
gchar *s = N_("Special Print Mode:");
gchar *s = N_("Toner Save: ");
gchar *s = N_("Toner Save: ");
gchar *s = N_("Draft Mode:");
gchar *s = N_("Special Print Mode:");
gchar *s = N_("Toner Save: ");
gchar *s = N_("Heavy Paper 1");
gchar *s = N_("Heavy Paper 1");
gchar *s = N_("Draft Mode:");
gchar *s = N_("Draft Mode:");
gchar *s = N_("Special Print Mode:");
gchar *s = N_("Draft Mode:");
gchar *s = N_("Special Print Mode:");
gchar *s = N_("Draft Mode:");
gchar *s = N_("Draft Mode:");
gchar *s = N_("Secure Watermark Function of Device");
gchar *s = N_("Use Secure Watermark Function of Device");
gchar *s = N_("Toner Save: ");
gchar *s = N_("Draft Mode:");
gchar *s = N_("Draft Mode:");
gchar *s = N_("Draft Mode:");
gchar *s = N_("Draft Mode:");
gchar *s = N_("Toner Save: ");
gchar *s = N_("Toner Save: ");
gchar *s = N_("Special Print Mode (Plain Paper):");
gchar *s = N_("Special Print Mode (Plain Paper):");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("Toner Save: ");
gchar *s = N_("Special Print Mode (Plain Paper):");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("Toner Save: ");
gchar *s = N_("Special Print Mode (Plain Paper):");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("Draft Mode:");
gchar *s = N_("Toner Save:");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("Toner Save: ");
gchar *s = N_("Plain Paper L2");
gchar *s = N_("Coated Paper 1");
gchar *s = N_("Coated Paper 2");
gchar *s = N_("Coated Paper 3");
gchar *s = N_("Coated Paper 4");
gchar *s = N_("Plain Paper L2");
gchar *s = N_("Coated Paper 1");
gchar *s = N_("Coated Paper 2");
gchar *s = N_("Coated Paper 3");
gchar *s = N_("Coated Paper 4");
gchar *s = N_("Toner Save: ");
gchar *s = N_("Plain Paper L2");
gchar *s = N_("Coated Paper 1");
gchar *s = N_("Coated Paper 2");
gchar *s = N_("Coated Paper 3");
gchar *s = N_("Coated Paper 4");
gchar *s = N_("Plain Paper L2");
gchar *s = N_("Coated Paper 1");
gchar *s = N_("Coated Paper 2");
gchar *s = N_("Coated Paper 3");
gchar *s = N_("Coated Paper 4");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("Toner Save: ");
gchar *s = N_("Plain Paper L2");
gchar *s = N_("Coated Paper 1");
gchar *s = N_("Coated Paper 2");
gchar *s = N_("Coated Paper 3");
gchar *s = N_("Coated Paper 4");
gchar *s = N_("Plain Paper L2");
gchar *s = N_("Coated Paper 1");
gchar *s = N_("Coated Paper 2");
gchar *s = N_("Coated Paper 3");
gchar *s = N_("Coated Paper 4");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("Draft Mode:");
gchar *s = N_("Toner Save:");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("Draft Mode:");
gchar *s = N_("Draft Mode:");
gchar *s = N_("Coated Paper 1");
gchar *s = N_("Coated Paper 2");
gchar *s = N_("Coated Paper 3");
gchar *s = N_("Coated Paper 1");
gchar *s = N_("Coated Paper 2");
gchar *s = N_("Coated Paper 3");
gchar *s = N_("Toner Save:");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Toner Save:");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Toner Save:");
gchar *s = N_("Special Print Adjustment:");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("Toner Save:");
gchar *s = N_("Special Print Adjustment:");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("Special Print Mode:");
gchar *s = N_("Special Print Mode:");
gchar *s = N_("Special Print Mode:");
gchar *s = N_("Special Print Mode:");
gchar *s = N_("Special Print Mode:");
gchar *s = N_("Special Print Mode:");
gchar *s = N_("Special Print Mode:");
gchar *s = N_("Special Print Mode:");
gchar *s = N_("Heavy Paper H");
gchar *s = N_("Special Print Adjustment:");
gchar *s = N_("Heavy Paper H");
gchar *s = N_("Special Print Adjustment:");
gchar *s = N_("Heavy Paper H");
gchar *s = N_("Special Print Adjustment:");
gchar *s = N_("Heavy Paper H");
gchar *s = N_("Special Print Adjustment:");
gchar *s = N_("Heavy Paper H");
gchar *s = N_("Special Print Adjustment:");
gchar *s = N_("Heavy Paper H");
gchar *s = N_("Special Print Adjustment:");
gchar *s = N_("Toner Save:");
gchar *s = N_("Special Print Adjustment:");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("Toner Save:");
gchar *s = N_("Special Print Adjustment:");
gchar *s = N_("Toner Save:");
gchar *s = N_("Special Print Adjustment:");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("Toner Save:");
gchar *s = N_("Special Print Adjustment:");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("Toner Save:");
gchar *s = N_("Special Print Adjustment:");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("Toner Save:");
gchar *s = N_("Special Print Adjustment:");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("Toner Save:");
gchar *s = N_("Special Print Adjustment:");
gchar *s = N_("Toner Save:");
gchar *s = N_("Special Print Adjustment:");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("Toner Save:");
gchar *s = N_("Special Print Adjustment:");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("Special Print Mode:");
gchar *s = N_("Special Print Mode:");
gchar *s = N_("Special Print Mode:");
gchar *s = N_("Special Print Adjustment:");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("Special Print Adjustment:");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("Special Print Adjustment:");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("Special Print Adjustment:");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("3-Hole Punch");
gchar *s = N_("Special Print Adjustment:");
gchar *s = N_("Toner Save:");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Glossy 1");
gchar *s = N_("Glossy 2");
gchar *s = N_("Glossy 3");
gchar *s = N_("Glossy 4");
gchar *s = N_("Toner Save:");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Glossy 1");
gchar *s = N_("Glossy 2");
gchar *s = N_("Glossy 3");
gchar *s = N_("Glossy 4");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("Toner Save:");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Glossy 1");
gchar *s = N_("Glossy 2");
gchar *s = N_("Glossy 3");
gchar *s = N_("Glossy 4");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("Toner Save:");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Glossy 1");
gchar *s = N_("Glossy 2");
gchar *s = N_("Glossy 3");
gchar *s = N_("Glossy 4");
gchar *s = N_("Toner Save:");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Glossy 1");
gchar *s = N_("Glossy 2");
gchar *s = N_("Glossy 3");
gchar *s = N_("Glossy 4");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("Toner Save:");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Glossy 1");
gchar *s = N_("Glossy 2");
gchar *s = N_("Glossy 3");
gchar *s = N_("Glossy 4");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("Toner Save:");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Glossy 1");
gchar *s = N_("Glossy 2");
gchar *s = N_("Glossy 3");
gchar *s = N_("Glossy 4");
gchar *s = N_("Toner Save:");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Glossy 1");
gchar *s = N_("Glossy 2");
gchar *s = N_("Glossy 3");
gchar *s = N_("Glossy 4");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("Toner Save:");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Glossy 1");
gchar *s = N_("Glossy 2");
gchar *s = N_("Glossy 3");
gchar *s = N_("Glossy 4");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("Toner Save:");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Glossy 1");
gchar *s = N_("Glossy 2");
gchar *s = N_("Glossy 3");
gchar *s = N_("Glossy 4");
gchar *s = N_("Toner Save:");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Glossy 1");
gchar *s = N_("Glossy 2");
gchar *s = N_("Glossy 3");
gchar *s = N_("Glossy 4");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("Toner Save:");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Glossy 1");
gchar *s = N_("Glossy 2");
gchar *s = N_("Glossy 3");
gchar *s = N_("Glossy 4");
gchar *s = N_("Envelope No.10 (COM10)");
gchar *s = N_("Toner Save:");
gchar *s = N_("Envelope NAGAGATA 3/YOUGATANAGA 3");
gchar *s = N_("Toner Save:");
gchar *s = N_("Toner Save:");
gchar *s = N_("Toner Save:");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Envelope NAGAGATA 3/YOUGATANAGA 3");
gchar *s = N_("Toner Save:");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Toner Save:");
gchar *s = N_("Plain Paper 1");
gchar *s = N_("Plain Paper 2");
gchar *s = N_("Toner Save:");
gchar *s = N_("Toner Save:");
gchar *s = N_("Secure Watermark Function of Device");
gchar *s = N_("Recycled Paper 1");
gchar *s = N_("Recycled Paper 2");
gchar *s = N_("Recycled Paper 3");
gchar *s = N_("Recycled Paper 4");
gchar *s = N_("Pre-punched Paper 1");
gchar *s = N_("Pre-punched Paper 2");
gchar *s = N_("Heavy Paper 4");
gchar *s = N_("Heavy Paper 5");
gchar *s = N_("Thin");
gchar *s = N_("Tab Paper 1");
gchar *s = N_("Tab Paper 2");
gchar *s = N_("1-sided Coated 1");
gchar *s = N_("1-sided Coated 2");
gchar *s = N_("1-sided Coated 3");
gchar *s = N_("1-sided Coated 4");
gchar *s = N_("1-sided Coated 5");
gchar *s = N_("2-sided Coated 1");
gchar *s = N_("2-sided Coated 2");
gchar *s = N_("2-sided Coated 3");
gchar *s = N_("2-sided Coated 4");
gchar *s = N_("2-sided Coated 5");
gchar *s = N_("Texture Paper 1");
gchar *s = N_("Texture Paper 2");
gchar *s = N_("Texture Paper 3");
gchar *s = N_("Texture Paper 4");
gchar *s = N_("Texture Paper 5");
gchar *s = N_("Texture Paper 6");
gchar *s = N_("Vellum 2");
gchar *s = N_("Recycled Paper 1");
gchar *s = N_("Recycled Paper 2");
gchar *s = N_("Recycled Paper 3");
gchar *s = N_("Recycled Paper 4");
gchar *s = N_("Pre-punched Paper 1");
gchar *s = N_("Pre-punched Paper 2");
gchar *s = N_("Heavy Paper 4");
gchar *s = N_("Heavy Paper 5");
gchar *s = N_("Thin");
gchar *s = N_("1-sided Coated 1");
gchar *s = N_("1-sided Coated 2");
gchar *s = N_("1-sided Coated 3");
gchar *s = N_("1-sided Coated 4");
gchar *s = N_("1-sided Coated 5");
gchar *s = N_("2-sided Coated 1");
gchar *s = N_("2-sided Coated 2");
gchar *s = N_("2-sided Coated 3");
gchar *s = N_("2-sided Coated 4");
gchar *s = N_("2-sided Coated 5");
gchar *s = N_("Texture Paper 1");
gchar *s = N_("Texture Paper 2");
gchar *s = N_("Texture Paper 3");
gchar *s = N_("Texture Paper 4");
gchar *s = N_("Texture Paper 5");
gchar *s = N_("Texture Paper 6");
gchar *s = N_("Vellum 2");
gchar *s = N_("Use Secure Watermark Function of Device");
gchar *s = N_("Secure Watermark Function of Device");
gchar *s = N_("Recycled Paper 1");
gchar *s = N_("Recycled Paper 2");
gchar *s = N_("Recycled Paper 3");
gchar *s = N_("Recycled Paper 4");
gchar *s = N_("Pre-punched Paper 1");
gchar *s = N_("Pre-punched Paper 2");
gchar *s = N_("Heavy Paper 4");
gchar *s = N_("Heavy Paper 5");
gchar *s = N_("Thin");
gchar *s = N_("Tab Paper 1");
gchar *s = N_("Tab Paper 2");
gchar *s = N_("1-sided Coated 1");
gchar *s = N_("1-sided Coated 2");
gchar *s = N_("1-sided Coated 3");
gchar *s = N_("1-sided Coated 4");
gchar *s = N_("1-sided Coated 5");
gchar *s = N_("2-sided Coated 1");
gchar *s = N_("2-sided Coated 2");
gchar *s = N_("2-sided Coated 3");
gchar *s = N_("2-sided Coated 4");
gchar *s = N_("2-sided Coated 5");
gchar *s = N_("Texture Paper 1");
gchar *s = N_("Texture Paper 2");
gchar *s = N_("Texture Paper 3");
gchar *s = N_("Texture Paper 4");
gchar *s = N_("Texture Paper 5");
gchar *s = N_("Texture Paper 6");
gchar *s = N_("Vellum 2");
gchar *s = N_("Recycled Paper 1");
gchar *s = N_("Recycled Paper 2");
gchar *s = N_("Recycled Paper 3");
gchar *s = N_("Recycled Paper 4");
gchar *s = N_("Pre-punched Paper 1");
gchar *s = N_("Pre-punched Paper 2");
gchar *s = N_("Heavy Paper 4");
gchar *s = N_("Heavy Paper 5");
gchar *s = N_("Thin");
gchar *s = N_("1-sided Coated 1");
gchar *s = N_("1-sided Coated 2");
gchar *s = N_("1-sided Coated 3");
gchar *s = N_("1-sided Coated 4");
gchar *s = N_("1-sided Coated 5");
gchar *s = N_("2-sided Coated 1");
gchar *s = N_("2-sided Coated 2");
gchar *s = N_("2-sided Coated 3");
gchar *s = N_("2-sided Coated 4");
gchar *s = N_("2-sided Coated 5");
gchar *s = N_("Texture Paper 1");
gchar *s = N_("Texture Paper 2");
gchar *s = N_("Texture Paper 3");
gchar *s = N_("Texture Paper 4");
gchar *s = N_("Texture Paper 5");
gchar *s = N_("Texture Paper 6");
gchar *s = N_("Vellum 2");
gchar *s = N_("Use Secure Watermark Function of Device");
gchar *s = N_("Secure Watermark Function of Device");
gchar *s = N_("Recycled Paper 1");
gchar *s = N_("Recycled Paper 2");
gchar *s = N_("Recycled Paper 3");
gchar *s = N_("Recycled Paper 4");
gchar *s = N_("Pre-punched Paper 1");
gchar *s = N_("Pre-punched Paper 2");
gchar *s = N_("Heavy Paper 4");
gchar *s = N_("Heavy Paper 5");
gchar *s = N_("Thin Paper");
gchar *s = N_("1-sided Coated 1");
gchar *s = N_("1-sided Coated 2");
gchar *s = N_("1-sided Coated 3");
gchar *s = N_("1-sided Coated 4");
gchar *s = N_("1-sided Coated 5");
gchar *s = N_("2-sided Coated 1");
gchar *s = N_("2-sided Coated 2");
gchar *s = N_("2-sided Coated 3");
gchar *s = N_("2-sided Coated 4");
gchar *s = N_("2-sided Coated 5");
gchar *s = N_("Texture Paper 1");
gchar *s = N_("Texture Paper 2");
gchar *s = N_("Texture Paper 3");
gchar *s = N_("Texture Paper 4");
gchar *s = N_("Texture Paper 5");
gchar *s = N_("Texture Paper 6");
gchar *s = N_("Vellum 2");
gchar *s = N_("Recycled Paper 1");
gchar *s = N_("Recycled Paper 2");
gchar *s = N_("Recycled Paper 3");
gchar *s = N_("Recycled Paper 4");
gchar *s = N_("Pre-punched Paper 1");
gchar *s = N_("Pre-punched Paper 2");
gchar *s = N_("Heavy Paper 4");
gchar *s = N_("Heavy Paper 5");
gchar *s = N_("Thin Paper");
gchar *s = N_("1-sided Coated 1");
gchar *s = N_("1-sided Coated 2");
gchar *s = N_("1-sided Coated 3");
gchar *s = N_("1-sided Coated 4");
gchar *s = N_("1-sided Coated 5");
gchar *s = N_("2-sided Coated 1");
gchar *s = N_("2-sided Coated 2");
gchar *s = N_("2-sided Coated 3");
gchar *s = N_("2-sided Coated 4");
gchar *s = N_("2-sided Coated 5");
gchar *s = N_("Texture Paper 1");
gchar *s = N_("Texture Paper 2");
gchar *s = N_("Texture Paper 3");
gchar *s = N_("Texture Paper 4");
gchar *s = N_("Texture Paper 5");
gchar *s = N_("Texture Paper 6");
gchar *s = N_("Vellum 2");
gchar *s = N_("Use Secure Watermark Function of Device");
gchar *s = N_("Secure Watermark Function of Device");
gchar *s = N_("Recycled Paper 1");
gchar *s = N_("Recycled Paper 2");
gchar *s = N_("Recycled Paper 3");
gchar *s = N_("Recycled Paper 4");
gchar *s = N_("Pre-punched Paper 1");
gchar *s = N_("Pre-punched Paper 2");
gchar *s = N_("Heavy Paper 4");
gchar *s = N_("Heavy Paper 5");
gchar *s = N_("Thin Paper");
gchar *s = N_("1-sided Coated 1");
gchar *s = N_("1-sided Coated 2");
gchar *s = N_("1-sided Coated 3");
gchar *s = N_("1-sided Coated 4");
gchar *s = N_("1-sided Coated 5");
gchar *s = N_("2-sided Coated 1");
gchar *s = N_("2-sided Coated 2");
gchar *s = N_("2-sided Coated 3");
gchar *s = N_("2-sided Coated 4");
gchar *s = N_("2-sided Coated 5");
gchar *s = N_("Texture Paper 1");
gchar *s = N_("Texture Paper 2");
gchar *s = N_("Texture Paper 3");
gchar *s = N_("Texture Paper 4");
gchar *s = N_("Texture Paper 5");
gchar *s = N_("Texture Paper 6");
gchar *s = N_("Vellum 2");
gchar *s = N_("Recycled Paper 1");
gchar *s = N_("Recycled Paper 2");
gchar *s = N_("Recycled Paper 3");
gchar *s = N_("Recycled Paper 4");
gchar *s = N_("Pre-punched Paper 1");
gchar *s = N_("Pre-punched Paper 2");
gchar *s = N_("Heavy Paper 4");
gchar *s = N_("Heavy Paper 5");
gchar *s = N_("Thin Paper");
gchar *s = N_("1-sided Coated 1");
gchar *s = N_("1-sided Coated 2");
gchar *s = N_("1-sided Coated 3");
gchar *s = N_("1-sided Coated 4");
gchar *s = N_("1-sided Coated 5");
gchar *s = N_("2-sided Coated 1");
gchar *s = N_("2-sided Coated 2");
gchar *s = N_("2-sided Coated 3");
gchar *s = N_("2-sided Coated 4");
gchar *s = N_("2-sided Coated 5");
gchar *s = N_("Texture Paper 1");
gchar *s = N_("Texture Paper 2");
gchar *s = N_("Texture Paper 3");
gchar *s = N_("Texture Paper 4");
gchar *s = N_("Texture Paper 5");
gchar *s = N_("Texture Paper 6");
gchar *s = N_("Vellum 2");
gchar *s = N_("Use Secure Watermark Function of Device");
gchar *s = N_("None ");
gchar *s = N_("Paper Deck Unit-A1");
gchar *s = N_("Paper Deck Unit-B1");
gchar *s = N_("POD Deck Lite-A1");
gchar *s = N_("Multi Drawer Paper Deck-A1");
gchar *s = N_("None ");
gchar *s = N_("Finisher-M1");
gchar *s = N_("Finisher-N1");
gchar *s = N_("Finisher-P1");
gchar *s = N_("Finisher-L1");
gchar *s = N_("Finisher-K1");
gchar *s = N_("Finisher-K2");
gchar *s = N_("Saddle Finisher-K3");
gchar *s = N_("Saddle Finisher-K3N");
gchar *s = N_("Saddle Finisher-K4");
gchar *s = N_("Stacker-A1");
gchar *s = N_("Saddle Finisher-G1");
gchar *s = N_("Finisher-J1");
gchar *s = N_("Finisher-V1/V1L");
gchar *s = N_("Finisher-V1/V1L + Perfect Binder-A1");
gchar *s = N_("Finisher-V1/V1L + High Capacity Stacker-A1 + Perfect Binder-A1");
gchar *s = N_("Saddle Finisher-V2/V2L");
gchar *s = N_("Saddle Finisher-V2/V2L + Perfect Binder-A1");
gchar *s = N_("Saddle Finisher-V2/V2L + High Capacity Stacker-A1 + Perfect Binder-A1");
gchar *s = N_("High Capacity Stacker-A1");
gchar *s = N_("High Capacity Stacker-A1 + Perfect Binder-A1");
gchar *s = N_("Perfect Binder-A1");
gchar *s = N_("Inner 2way Tray");
gchar *s = N_("Inner 2way Tray + Copy Tray");
gchar *s = N_("Inner 2way Tray-C1");
gchar *s = N_("Finisher-P1 + Copy Tray");
gchar *s = N_("Finisher-S1");
gchar *s = N_("Finisher-S1 + Copy Tray");
gchar *s = N_("Finisher-S1 + Finisher Tray");
gchar *s = N_("Finisher-S1 + Copy Tray + Finisher Tray");
gchar *s = N_("Finisher-Q1");
gchar *s = N_("Finisher-Q1/Q3");
gchar *s = N_("Finisher-Q3");
gchar *s = N_("Finisher-Q3 + Finisher Tray");
gchar *s = N_("Saddle Finisher-Q2");
gchar *s = N_("Saddle Finisher-Q2/Q4");
gchar *s = N_("Saddle Finisher-Q4");
gchar *s = N_("Stapler Stacker");
gchar *s = N_("7-bin Sorter");
gchar *s = N_("Saddle Finisher-Q4 + Finisher Tray");
gchar *s = N_("Finisher-AE1");
gchar *s = N_("Finisher-AE1 + Finisher Tray");
gchar *s = N_("Saddle Finisher-AE2");
gchar *s = N_("Saddle Finisher-AE2 + Finisher Tray");
gchar *s = N_("Copy Tray");
gchar *s = N_("Multi Tray-3");
gchar *s = N_("Option Tray");
gchar *s = N_("Finisher-E1");
gchar *s = N_("Finisher-C1");
gchar *s = N_("Saddle Finisher-C2");
gchar *s = N_("Finisher-U1");
gchar *s = N_("Finisher Tray");
gchar *s = N_("Finisher-X1");
gchar *s = N_("Finisher-W1");
gchar *s = N_("Saddle Finisher-W2");
gchar *s = N_("Finisher-Z1");
gchar *s = N_("Finisher-Z1 + Copy Tray");
gchar *s = N_("Finisher-Y1");
gchar *s = N_("Saddle Finisher-Y2");
gchar *s = N_("Finisher-AD1");
gchar *s = N_("Saddle Finisher-AD2");
gchar *s = N_("Finisher-AA1");
gchar *s = N_("Saddle Finisher-AA2");
gchar *s = N_("Finisher-U2");
gchar *s = N_("Finisher-U2 + Finisher Tray");
gchar *s = N_("Finisher-R1");
gchar *s = N_("Finisher-R1 + Finisher Tray");
gchar *s = N_("Saddle Finisher-R2");
gchar *s = N_("Saddle Finisher-R2 + Finisher Tray");
gchar *s = N_("Finisher-AC1");
gchar *s = N_("Saddle Finisher-AC2");
gchar *s = N_("Saddle Finisher-N2");
gchar *s = N_("Finisher-F1");
gchar *s = N_("Saddle Finisher-F2");
gchar *s = N_("Finisher-T1");
gchar *s = N_("Saddle Finisher-T2");
gchar *s = N_("Shift Tray");
gchar *s = N_("Staple Finisher-A1");
gchar *s = N_("Booklet Finisher-A1");
gchar *s = N_("Staple Finisher-B1");
gchar *s = N_("Booklet Finisher-B1");
gchar *s = N_("Inner Finisher-A1");
gchar *s = N_("Inner Finisher-A1 + Copy Tray");
gchar *s = N_("Inner Finisher-A1 + Inner Finisher Additional Tray");
gchar *s = N_("Inner Finisher-A1 + Copy Tray + Inner Finisher Additional Tray");
gchar *s = N_("Staple Finisher-C1");
gchar *s = N_("Booklet Finisher-C1");
gchar *s = N_("Staple Finisher-D1");
gchar *s = N_("Booklet Finisher-D1");
gchar *s = N_("Staple Finisher-E1");
gchar *s = N_("Booklet Finisher-E1");
gchar *s = N_("Inner Finisher-B1");
gchar *s = N_("Inner Finisher-B1 + Inner Finisher Additional Tray");
gchar *s = N_("Staple Finisher-F1");
gchar *s = N_("Booklet Finisher-F1");
gchar *s = N_("Inner Finisher-C1");
gchar *s = N_("Inner Finisher-C1 + Copy Tray");
gchar *s = N_("Inner Finisher-C1 + Inner Finisher Additional Tray");
gchar *s = N_("Inner Finisher-C1 + Copy Tray + Inner Finisher Additional Tray");
gchar *s = N_("Inner Finisher-D1");
gchar *s = N_("Inner Finisher-D1 + Inner Finisher Additional Tray");
gchar *s = N_("Staple Finisher-G1");
gchar *s = N_("Booklet Finisher-G1");
gchar *s = N_("Staple Finisher-H1");
gchar *s = N_("1200 dpi");
gchar *s = N_("600 dpi");
gchar *s = N_("300 dpi");
gchar *s = N_("Printer Default");
gchar *s = N_("On");
gchar *s = N_("Off");
gchar *s = N_("Printer Default");
gchar *s = N_("Off");
gchar *s = N_("Mode 1");
gchar *s = N_("Mode 2");
gchar *s = N_("Mode 3");
gchar *s = N_("Mode 4");
gchar *s = N_("Off");
gchar *s = N_("Mode 1");
gchar *s = N_("Mode 2");
gchar *s = N_("Mode 3");
gchar *s = N_("sRGB v1.20 (Canon)");
gchar *s = N_("sRGB v3.0 (Canon)");
gchar *s = N_("Canon HDTV gamma 1.5 Monitor");
gchar *s = N_("Canon HDTV gamma 1.8 Monitor");
gchar *s = N_("Canon HDTV gamma 2.1 Monitor");
gchar *s = N_("Canon HDTV gamma 2.4 Monitor");
gchar *s = N_("Printer Default");
gchar *s = N_("Saturation");
gchar *s = N_("Perceptual (Monitor Color Matched)");
gchar *s = N_("Perceptual (Photographic)");
gchar *s = N_("Colorimetric");
gchar *s = N_("Vivid Photo");
gchar *s = N_("Standard");
gchar *s = N_("Printer Default");
gchar *s = N_("Printer Default");
gchar *s = N_("On");
gchar *s = N_("Off");
gchar *s = N_("Auto");
gchar *s = N_("Printer Default");
gchar *s = N_("Plain Paper");
gchar *s = N_("Plain Paper L ");
gchar *s = N_("Plain Paper L");
gchar *s = N_("Plain Paper H");
gchar *s = N_("Plain Paper 3");
gchar *s = N_("Recycled Paper");
gchar *s = N_("Color Paper");
gchar *s = N_("Pre-punched Paper");
gchar *s = N_("Letterhead");
gchar *s = N_("Letterhead (Plain)");
gchar *s = N_("Letterhead (Heavy)");
gchar *s = N_("Bond Paper");
gchar *s = N_("Heavy Paper");
gchar *s = N_("Heavy Paper 1");
gchar *s = N_("Heavy Paper 2");
gchar *s = N_("Heavy Paper 3");
gchar *s = N_("Heavy Paper L");
gchar *s = N_("Heavy Paper L ");
gchar *s = N_("Heavy Paper H");
gchar *s = N_("Transparency");
gchar *s = N_("Heavy Paper ");
gchar *s = N_("Transparency");
gchar *s = N_("Postcard");
gchar *s = N_("Labels");
gchar *s = N_("Envelope");
gchar *s = N_("Glossy Film");
gchar *s = N_("Postcard");
gchar *s = N_("Envelope");
gchar *s = N_("Postcard L");
gchar *s = N_("Envelope H");
gchar *s = N_("Heavy/HeavyL");
gchar *s = N_("Tab Paper");
gchar *s = N_("Tab Paper 1");
gchar *s = N_("Tab Paper 2");
gchar *s = N_("Tracing Paper");
gchar *s = N_("Coated Paper");
gchar *s = N_("Rough Paper");
gchar *s = N_("Rough Paper 1");
gchar *s = N_("Rough Paper 2");
gchar *s = N_("Rough Paper 3");
gchar *s = N_("Glossy Paper");
gchar *s = N_("Washi (Japanese Paper)");
gchar *s = N_("Auto");
gchar *s = N_("Multi-purpose Tray ");
gchar *s = N_("Drawer 1");
gchar *s = N_("Drawer 2");
gchar *s = N_("Drawer 3");
gchar *s = N_("Drawer 4");
gchar *s = N_("Drawer 5");
gchar *s = N_("Drawer 6");
gchar *s = N_("Drawer 7");
gchar *s = N_("Side Paper Deck");
gchar *s = N_("Envelope Feeder");
gchar *s = N_("Envelope Feeder ");
gchar *s = N_("Auto");
gchar *s = N_("Printer Default");
gchar *s = N_("Plain Paper");
gchar *s = N_("Plain Paper L");
gchar *s = N_("Plain Paper H");
gchar *s = N_("Plain Paper 3");
gchar *s = N_("Recycled Paper");
gchar *s = N_("Color Paper");
gchar *s = N_("Bond Paper");
gchar *s = N_("Labels");
gchar *s = N_("Tracing Paper");
gchar *s = N_("Letterhead");
gchar *s = N_("Pre-punched Paper");
gchar *s = N_("Letterhead (Plain)");
gchar *s = N_("Letterhead (Heavy)");
gchar *s = N_("Heavy Paper");
gchar *s = N_("Heavy Paper 1");
gchar *s = N_("Heavy Paper 2");
gchar *s = N_("Heavy Paper 3");
gchar *s = N_("Heavy Paper L");
gchar *s = N_("Heavy Paper H");
gchar *s = N_("Glossy Paper");
gchar *s = N_("Tab Paper 1");
gchar *s = N_("Tab Paper 2");
gchar *s = N_("Rough Paper");
gchar *s = N_("Rough Paper 1");
gchar *s = N_("Rough Paper 2");
gchar *s = N_("Rough Paper 3");
gchar *s = N_("Washi (Japanese Paper)");
gchar *s = N_("Auto");
gchar *s = N_("Tray A");
gchar *s = N_("Tray B");
gchar *s = N_("Tray C");
gchar *s = N_("Stack Compartment");
gchar *s = N_("Output Tray");
gchar *s = N_("Sub-output Tray");
gchar *s = N_("Bin 1");
gchar *s = N_("Bin 2");
gchar *s = N_("Bin 3");
gchar *s = N_("Bin 4");
gchar *s = N_("Bin 5");
gchar *s = N_("Bin 6");
gchar *s = N_("Bin 7");
gchar *s = N_("Printer Default");
gchar *s = N_("Off ");
gchar *s = N_("Mode 1");
gchar *s = N_("Mode 2");
gchar *s = N_("Printer Default");
gchar *s = N_("Off");
gchar *s = N_("On");
gchar *s = N_("Mode 1");
gchar *s = N_("Mode 2");
gchar *s = N_("Mode 3");
gchar *s = N_("Mode 4");
gchar *s = N_("Printer Default");
gchar *s = N_("Off ");
gchar *s = N_("Special Settings 1");
gchar *s = N_("Special Settings 2");
gchar *s = N_("On");
gchar *s = N_("Off");
gchar *s = N_("Long Edge (Left)");
gchar *s = N_("Long Edge (Right)");
gchar *s = N_("Short Edge (Top)");
gchar *s = N_("Short Edge (Bottom)");
gchar *s = N_("OFF");
gchar *s = N_("Left Binding");
gchar *s = N_("Right Binding");
gchar *s = N_("Off  ");
gchar *s = N_("Collate ");
gchar *s = N_("Group");
gchar *s = N_("Staple");
gchar *s = N_("Staple & Collate");
gchar *s = N_("Staple & Group");
gchar *s = N_("No Stapling");
gchar *s = N_("Upper Left (Single)");
gchar *s = N_("Top (Double)");
gchar *s = N_("Upper Right (Single)");
gchar *s = N_("Left (Double)");
gchar *s = N_("Right (Double)");
gchar *s = N_("Lower Left (Single)");
gchar *s = N_("Bottom (Double)");
gchar *s = N_("Lower Right (Single)");
gchar *s = N_("Face Down + Portrait");
gchar *s = N_("Face Up + Landscape");
gchar *s = N_("Portrait ");
gchar *s = N_("Landscape ");
gchar *s = N_("Face Down + Portrait");
gchar *s = N_("Face Down + Landscape");
gchar *s = N_("Face Up + Portrait");
gchar *s = N_("Face Up + Landscape");
gchar *s = N_("Off");
gchar *s = N_("On");
gchar *s = N_("2 Holes");
gchar *s = N_("2/3 Holes");
gchar *s = N_("2 Holes (French)");
gchar *s = N_("4 Holes (French)");
gchar *s = N_("4 Holes (Swedish)");
gchar *s = N_("Multi Holes");
gchar *s = N_("Printer Default");
gchar *s = N_("Face Up (Reverse Output Order)");
gchar *s = N_("Face Down (Normal Output Order)");
gchar *s = N_("Auto Detect");
gchar *s = N_("Color");
gchar *s = N_("Black and White");
gchar *s = N_("Printer Default");
gchar *s = N_("Transmissive Projector");
gchar *s = N_("Reflective Projector");
gchar *s = N_("Printer Default");
gchar *s = N_("On");
gchar *s = N_("Off");
gchar *s = N_("Printer Default");
gchar *s = N_("On");
gchar *s = N_("Off");
gchar *s = N_("None ");
gchar *s = N_("Only Front Side");
gchar *s = N_("Only Back Side");
gchar *s = N_("Both Sides");
gchar *s = N_("Multi-purpose Tray ");
gchar *s = N_("Drawer 1");
gchar *s = N_("Drawer 2");
gchar *s = N_("Drawer 3");
gchar *s = N_("Drawer 4");
gchar *s = N_("Side Paper Deck");
gchar *s = N_("Insertion Unit");
gchar *s = N_("Inserter 1");
gchar *s = N_("Inserter 2");
gchar *s = N_("None ");
gchar *s = N_("Only Front Side");
gchar *s = N_("Only Back Side");
gchar *s = N_("Both Sides");
gchar *s = N_("Multi-purpose Tray ");
gchar *s = N_("Drawer 1");
gchar *s = N_("Drawer 2");
gchar *s = N_("Drawer 3");
gchar *s = N_("Drawer 4");
gchar *s = N_("Side Paper Deck");
gchar *s = N_("Insertion Unit");
gchar *s = N_("Inserter 1");
gchar *s = N_("Inserter 2");
gchar *s = N_("Face Down + Portrait");
gchar *s = N_("Face Down + Landscape");
gchar *s = N_("Face Up + Portrait");
gchar *s = N_("Face Up + Landscape");
gchar *s = N_("Printer Default");
gchar *s = N_("Off");
gchar *s = N_("Smooth 1");
gchar *s = N_("Smooth 2");
gchar *s = N_("Printer Default");
gchar *s = N_("Resolution");
gchar *s = N_("Gradation");
gchar *s = N_("Color Tone");
gchar *s = N_("Pattern 1");
gchar *s = N_("Pattern 2");
gchar *s = N_("Printer Default");
gchar *s = N_("Resolution");
gchar *s = N_("Gradation");
gchar *s = N_("Color Tone");
gchar *s = N_("None (Solid)");
gchar *s = N_("Printer Default");
gchar *s = N_("Off ");
gchar *s = N_("On ");
gchar *s = N_("Printer Default");
gchar *s = N_("Mode 1");
gchar *s = N_("Mode 2");
gchar *s = N_("Mode 3");
gchar *s = N_("Mode 4");
gchar *s = N_("Mode 5");
gchar *s = N_("Mode 6");
gchar *s = N_("Printer Default");
gchar *s = N_("-8 (Light)");
gchar *s = N_("-7 (Light)");
gchar *s = N_("-6 (Light)");
gchar *s = N_("-5 (Light)");
gchar *s = N_("-4 (Light)");
gchar *s = N_("-3 (Light)");
gchar *s = N_("-2 (Light)");
gchar *s = N_("-1 (Light)");
gchar *s = N_("0 (Standard)");
gchar *s = N_("1 (Dark)");
gchar *s = N_("2 (Dark)");
gchar *s = N_("3 (Dark)");
gchar *s = N_("4 (Dark)");
gchar *s = N_("5 (Dark)");
gchar *s = N_("6 (Dark)");
gchar *s = N_("7 (Dark)");
gchar *s = N_("8 (Dark)");
gchar *s = N_("Printer Default");
gchar *s = N_("Resolution Priority");
gchar *s = N_("Gradation Priority");
gchar *s = N_("Print");
gchar *s = N_("Secured Print");
gchar *s = N_("Store");
gchar *s = N_("Hold");
gchar *s = N_("Printer Default");
gchar *s = N_("-3 (Low)");
gchar *s = N_("-2 (Low)");
gchar *s = N_("-1 (Low)");
gchar *s = N_("0 (Standard)");
gchar *s = N_("1 (High)");
gchar *s = N_("2 (High)");
gchar *s = N_("3 (High)");
gchar *s = N_("Printer Default");
gchar *s = N_("On ");
gchar *s = N_("Off ");
gchar *s = N_("Letter");
gchar *s = N_("11x17");
gchar *s = N_("11x17 ");
gchar *s = N_("Legal");
gchar *s = N_("Statement");
gchar *s = N_("Executive");
gchar *s = N_("A6");
gchar *s = N_("A5");
gchar *s = N_("B5");
gchar *s = N_("A4");
gchar *s = N_("B4");
gchar *s = N_("A3");
gchar *s = N_("Postcard");
gchar *s = N_("Reply Postcard");
gchar *s = N_("4 on 1 Postcard");
gchar *s = N_("Envelope YOUGATA 2");
gchar *s = N_("Envelope YOUGATA 4");
gchar *s = N_("Envelope YOUGATANAGA 3");
gchar *s = N_("Envelope KAKUGATA 2");
gchar *s = N_("Envelope KAKUGATA 4");
gchar *s = N_("Envelope NAGAGATA 2");
gchar *s = N_("Envelope NAGAGATA 3");
gchar *s = N_("Envelope Monarch");
gchar *s = N_("Envelope COM10");
gchar *s = N_("Envelope DL");
gchar *s = N_("Envelope C5");
gchar *s = N_("Envelope B5");
gchar *s = N_("SRA3");
gchar *s = N_("12x18");
gchar *s = N_("13x19");
gchar *s = N_("Foolscap");
gchar *s = N_("Index Card");
gchar *s = N_("16K");
gchar *s = N_("8K");
gchar *s = N_("Long Edge (Top)");
gchar *s = N_("Long Edge (Bottom)");
gchar *s = N_("Short Edge (Right)");
gchar *s = N_("Short Edge (Left)");
gchar *s = N_("Long Edge (Right)");
gchar *s = N_("Long Edge (Left)");
gchar *s = N_("Short Edge (Bottom)");
gchar *s = N_("Short Edge (Top)");
gchar *s = N_("Long Edge (Bottom)");
gchar *s = N_("Long Edge (Top)");
gchar *s = N_("Short Edge (Left)");
gchar *s = N_("Short Edge (Right)");
gchar *s = N_("Top Binding");
gchar *s = N_("Bottom Binding");
gchar *s = N_("Right Binding");
gchar *s = N_("Left Binding");
gchar *s = N_("Bottom Binding");
gchar *s = N_("Top Binding");
gchar *s = N_("No Stapling");
gchar *s = N_("Upper Right (Single)");
gchar *s = N_("Right (Double)");
gchar *s = N_("Lower Right (Single)");
gchar *s = N_("Top (Double)");
gchar *s = N_("Bottom (Double)");
gchar *s = N_("Upper Left (Single)");
gchar *s = N_("Left (Double)");
gchar *s = N_("Lower Left (Single)");
gchar *s = N_("No Stapling");
gchar *s = N_("Lower Right (Single)");
gchar *s = N_("Bottom (Double)");
gchar *s = N_("Lower Left (Single)");
gchar *s = N_("Right (Double)");
gchar *s = N_("Left (Double)");
gchar *s = N_("Upper Right (Single)");
gchar *s = N_("Top (Double)");
gchar *s = N_("Upper Left (Single)");
gchar *s = N_("No Stapling");
gchar *s = N_("Lower Left (Single)");
gchar *s = N_("Left (Double)");
gchar *s = N_("Upper Left (Single)");
gchar *s = N_("Bottom (Double)");
gchar *s = N_("Top (Double)");
gchar *s = N_("Lower Right (Single)");
gchar *s = N_("Right (Double)");
gchar *s = N_("Upper Right (Single)");
gchar *s = N_("1 Page per Sheet");
gchar *s = N_("2 Pages per Sheet");
gchar *s = N_("4 Pages per Sheet");
gchar *s = N_("6 Pages per Sheet");
gchar *s = N_("9 Pages per Sheet");
gchar *s = N_("16 Pages per Sheet");
gchar *s = N_("Off ");
gchar *s = N_("Z-fold");
gchar *s = N_("C-fold");
gchar *s = N_("Half Fold");
gchar *s = N_("Accordion Z-fold");
gchar *s = N_("Double Parallel Fold");
gchar *s = N_("None ");
gchar *s = N_("Fold Only");
gchar *s = N_("Fold + Saddle Stitch");
gchar *s = N_("Fold + Saddle Stitch + Trim");
gchar *s = N_("Saddle Stitch");
gchar *s = N_("Saddle Stitch + Trim");
gchar *s = N_("1-sided Printing");
gchar *s = N_("2-sided Printing");
gchar *s = N_("Booklet Printing");
gchar *s = N_("mm (%d to %d)");
gchar *s = N_("mm (%.1f to %.1f)");
gchar *s = N_("mm (%.2f to %.2f)");
gchar *s = N_("0 to %d");
gchar *s = N_("in (0.0 to %.1f)");
gchar *s = N_("mm (0 to %d)");
gchar *s = N_("(1 to %d)");
gchar *s = N_("mm (%.1f to %.1f) ");
gchar *s = N_("Halftones:");
gchar *s = N_("B & W Halftones:");
